(()=>{var e={412:(e,t,n)=>{n(696).config(Object.assign({},n(24),n(216)(process.argv)))},216:e=>{const t=/^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;e.exports=function(e){return e.reduce((function(e,n){const r=n.match(t);return r&&(e[r[1]]=r[2]),e}),{})}},24:e=>{const t={};null!=process.env.DOTENV_CONFIG_ENCODING&&(t.encoding=process.env.DOTENV_CONFIG_ENCODING),null!=process.env.DOTENV_CONFIG_PATH&&(t.path=process.env.DOTENV_CONFIG_PATH),null!=process.env.DOTENV_CONFIG_DEBUG&&(t.debug=process.env.DOTENV_CONFIG_DEBUG),null!=process.env.DOTENV_CONFIG_OVERRIDE&&(t.override=process.env.DOTENV_CONFIG_OVERRIDE),null!=process.env.DOTENV_CONFIG_DOTENV_KEY&&(t.DOTENV_KEY=process.env.DOTENV_CONFIG_DOTENV_KEY),e.exports=t},696:(e,t,n)=>{const r=n(58),o=n(72),s=n(558),i=n(968),a=n(404).version,c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function p(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function l(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function d(e,t){let n;try{n=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const r=n.password;if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const o=n.searchParams.get("environment");if(!o){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const s=`DOTENV_VAULT_${o.toUpperCase()}`,i=e.parsed[s];if(!i){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:i,key:r}}function u(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const n of e.path)r.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=o.resolve(process.cwd(),".env.vault");return r.existsSync(t)?t:null}function f(e){return"~"===e[0]?o.join(s.homedir(),e.slice(1)):e}const E={configDotenv:function(e){const t=o.resolve(process.cwd(),".env");let n="utf8";const s=Boolean(e&&e.debug);e&&e.encoding?n=e.encoding:s&&p("No encoding is specified. UTF-8 is used by default");let i=[];if(e&&e.path){if(Array.isArray(e.path))for(const t of e.path)r.existsSync(t)&&i.push(f(t));else r.existsSync(e.path)&&(i=[f(e.path)]);i.length||(i=[t])}const a=i.length?i:[t],c={};try{for(const t of a){const o=E.parse(r.readFileSync(t,{encoding:n}));E.populate(c,o,e)}let t=process.env;e&&null!=e.processEnv&&(t=e.processEnv),E.populate(t,c,e)}catch(e){return s&&p(`Failed to load ${a} ${e.message}`),{error:e}}return{parsed:c}},_configVault:function(e){console.log(`[dotenv@${a}][INFO] Loading env from encrypted .env.vault`);const t=E._parseVault(e);let n=process.env;return e&&null!=e.processEnv&&(n=e.processEnv),E.populate(n,t,e),{parsed:t}},_parseVault:function(e){const t=u(e),n=E.configDotenv({path:t});if(!n.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const r=l(e).split(","),o=r.length;let s;for(let e=0;e<o;e++)try{const t=d(n,r[e].trim());s=E.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=o)throw t}return E.parse(s)},config:function(e){if(0===l(e).length)return E.configDotenv(e);const t=u(e);return t?E._configVault(e):(n=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${n}`),E.configDotenv(e));var n},decrypt:function(e,t){const n=Buffer.from(t.slice(-64),"hex");let r=Buffer.from(e,"base64");const o=r.subarray(0,12),s=r.subarray(-16);r=r.subarray(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",n,o);return e.setAuthTag(s),`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError,n="Invalid key length"===e.message,r="Unsupported state or unable to authenticate data"===e.message;if(t||n){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let n,r=e.toString();for(r=r.replace(/\r\n?/gm,"\n");null!=(n=c.exec(r));){const e=n[1];let r=n[2]||"";r=r.trim();const o=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===o&&(r=r.replace(/\\n/g,"\n"),r=r.replace(/\\r/g,"\r")),t[e]=r}return t},populate:function(e,t,n={}){const r=Boolean(n&&n.debug),o=Boolean(n&&n.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(!0===o&&(e[n]=t[n]),r&&p(!0===o?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}};e.exports.configDotenv=E.configDotenv,e.exports._configVault=E._configVault,e.exports._parseVault=E._parseVault,e.exports.config=E.config,e.exports.decrypt=E.decrypt,e.exports.parse=E.parse,e.exports.populate=E.populate,e.exports=E},968:e=>{"use strict";e.exports=require("crypto")},58:e=>{"use strict";e.exports=require("fs")},558:e=>{"use strict";e.exports=require("os")},72:e=>{"use strict";e.exports=require("path")},404:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.4","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};(()=>{"use strict";n.d(r,{_:()=>E});const e=require("node:http"),t=require("node:url");var o=n(968),s=n.n(o);const i={randomUUID:s().randomUUID},a=new Uint8Array(256);let c=a.length;function p(){return c>a.length-16&&(s().randomFillSync(a),c=0),a.slice(c,c+=16)}const l=[];for(let e=0;e<256;++e)l.push((e+256).toString(16).slice(1));const d=function(e,t,n){if(i.randomUUID&&!t&&!e)return i.randomUUID();const r=(e=e||{}).random||(e.rng||p)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return function(e,t=0){return l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]}(r)},u=new class{getUsers(e,t){const n=E.getUsers();t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(n))}async createUser(e,t){try{const n=await(e=>new Promise(((t,n)=>{let r="";e.on("data",(e=>{r+=e})),e.on("end",(()=>{try{const e=r?JSON.parse(r):{};t(e)}catch(e){n(e)}}))})))(e);n.username&&n.age&&n.hobbies?(n.id=d(),E.addUser(n),t.writeHead(201,{"Content-Type":"application/json"}),t.end(JSON.stringify(n))):(t.writeHead(400,{"Content-Type":"application/json"}),t.end("ERROR: Request body doesn't contain required fields"))}catch(e){console.log("ERROR: Error adding user")}}getUser(e,t,n){if(function(e){const t=[8,4,4,4,12];return e.split("-").every(((e,n)=>e.length===t[n]))}(n)){const e=E.getUsers().filter((e=>e.id===n))[0];e?.id?(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(e))):(t.writeHead(404,{"Content-Type":"application/json"}),t.end("ERROR: User with this ID not found"))}else t.writeHead(400,{"Content-Type":"application/json"}),t.end("ERROR: UserId is invalid")}},f={"/users":{GET:u.getUsers,POST:u.createUser},"/users/id":{GET:u.getUser},notFound:(e,t)=>{}};n(412);const E=new class{constructor(){this.users=[]}getUsers(){return this.users}setUsers(e){this.users=e}addUser(e){this.users.push(e)}},v=(0,e.createServer)(((e,n)=>{const r=(0,t.parse)(e.url,!0).pathname,o=e.method?e.method.toUpperCase():"GET";if("/api/users"===r)console.log(`method = ${o}`),"GET"!==o&&"POST"!==o||f["/users"][o](e,n);else if(r?.includes("/api/users")){const t=r.split("/").slice(-1)[0];t?.length&&"GET"===o&&f["/users/id"][o](e,n,t)}})),g=process.env.PORT||4e3;v.on("request",((e,t)=>{console.log(`${e.method} ${e.url}`)})),v.listen(g,(()=>console.log(`Server is running on port ${g}`)))})()})();