(()=>{var e={412:(e,t,n)=>{n(696).config(Object.assign({},n(24),n(216)(process.argv)))},216:e=>{const t=/^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;e.exports=function(e){return e.reduce((function(e,n){const s=n.match(t);return s&&(e[s[1]]=s[2]),e}),{})}},24:e=>{const t={};null!=process.env.DOTENV_CONFIG_ENCODING&&(t.encoding=process.env.DOTENV_CONFIG_ENCODING),null!=process.env.DOTENV_CONFIG_PATH&&(t.path=process.env.DOTENV_CONFIG_PATH),null!=process.env.DOTENV_CONFIG_DEBUG&&(t.debug=process.env.DOTENV_CONFIG_DEBUG),null!=process.env.DOTENV_CONFIG_OVERRIDE&&(t.override=process.env.DOTENV_CONFIG_OVERRIDE),null!=process.env.DOTENV_CONFIG_DOTENV_KEY&&(t.DOTENV_KEY=process.env.DOTENV_CONFIG_DOTENV_KEY),e.exports=t},696:(e,t,n)=>{const s=n(58),r=n(72),o=n(558),i=n(968),a=n(404).version,c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function p(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function l(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function d(e,t){let n;try{n=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const s=n.password;if(!s){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const r=n.searchParams.get("environment");if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const o=`DOTENV_VAULT_${r.toUpperCase()}`,i=e.parsed[o];if(!i){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:i,key:s}}function u(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const n of e.path)s.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=r.resolve(process.cwd(),".env.vault");return s.existsSync(t)?t:null}function E(e){return"~"===e[0]?r.join(o.homedir(),e.slice(1)):e}const f={configDotenv:function(e){const t=r.resolve(process.cwd(),".env");let n="utf8";const o=Boolean(e&&e.debug);e&&e.encoding?n=e.encoding:o&&p("No encoding is specified. UTF-8 is used by default");let i=[];if(e&&e.path){if(Array.isArray(e.path))for(const t of e.path)s.existsSync(t)&&i.push(E(t));else s.existsSync(e.path)&&(i=[E(e.path)]);i.length||(i=[t])}const a=i.length?i:[t],c={};try{for(const t of a){const r=f.parse(s.readFileSync(t,{encoding:n}));f.populate(c,r,e)}let t=process.env;e&&null!=e.processEnv&&(t=e.processEnv),f.populate(t,c,e)}catch(e){return o&&p(`Failed to load ${a} ${e.message}`),{error:e}}return{parsed:c}},_configVault:function(e){console.log(`[dotenv@${a}][INFO] Loading env from encrypted .env.vault`);const t=f._parseVault(e);let n=process.env;return e&&null!=e.processEnv&&(n=e.processEnv),f.populate(n,t,e),{parsed:t}},_parseVault:function(e){const t=u(e),n=f.configDotenv({path:t});if(!n.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const s=l(e).split(","),r=s.length;let o;for(let e=0;e<r;e++)try{const t=d(n,s[e].trim());o=f.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=r)throw t}return f.parse(o)},config:function(e){if(0===l(e).length)return f.configDotenv(e);const t=u(e);return t?f._configVault(e):(n=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${n}`),f.configDotenv(e));var n},decrypt:function(e,t){const n=Buffer.from(t.slice(-64),"hex");let s=Buffer.from(e,"base64");const r=s.subarray(0,12),o=s.subarray(-16);s=s.subarray(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",n,r);return e.setAuthTag(o),`${e.update(s)}${e.final()}`}catch(e){const t=e instanceof RangeError,n="Invalid key length"===e.message,s="Unsupported state or unable to authenticate data"===e.message;if(t||n){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(s){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let n,s=e.toString();for(s=s.replace(/\r\n?/gm,"\n");null!=(n=c.exec(s));){const e=n[1];let s=n[2]||"";s=s.trim();const r=s[0];s=s.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===r&&(s=s.replace(/\\n/g,"\n"),s=s.replace(/\\r/g,"\r")),t[e]=s}return t},populate:function(e,t,n={}){const s=Boolean(n&&n.debug),r=Boolean(n&&n.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(!0===r&&(e[n]=t[n]),s&&p(!0===r?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}};e.exports.configDotenv=f.configDotenv,e.exports._configVault=f._configVault,e.exports._parseVault=f._parseVault,e.exports.config=f.config,e.exports.decrypt=f.decrypt,e.exports.parse=f.parse,e.exports.populate=f.populate,e.exports=f},968:e=>{"use strict";e.exports=require("crypto")},58:e=>{"use strict";e.exports=require("fs")},558:e=>{"use strict";e.exports=require("os")},72:e=>{"use strict";e.exports=require("path")},404:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.4","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var s={};(()=>{"use strict";n.d(s,{_:()=>v});const e=require("node:http"),t=require("node:url");var r=n(968),o=n.n(r);const i={randomUUID:o().randomUUID},a=new Uint8Array(256);let c=a.length;function p(){return c>a.length-16&&(o().randomFillSync(a),c=0),a.slice(c,c+=16)}const l=[];for(let e=0;e<256;++e)l.push((e+256).toString(16).slice(1));const d=function(e,t,n){if(i.randomUUID&&!t&&!e)return i.randomUUID();const s=(e=e||{}).random||(e.rng||p)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=s[e];return t}return function(e,t=0){return l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]}(s)},u=e=>new Promise(((t,n)=>{let s="";e.on("data",(e=>{s+=e})),e.on("end",(()=>{try{const e=s?JSON.parse(s):{};t(e)}catch(e){n(e)}}))}));function E(e){const t=[8,4,4,4,12];return e.split("-").every(((e,n)=>e.length===t[n]))}const f=new class{getUsers(e,t){const n=v.getUsers();t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(n))}async createUser(e,t){try{const n=await u(e);n.username&&n.age&&n.hobbies?(n.id=d(),v.addUser(n),t.writeHead(201,{"Content-Type":"application/json"}),t.end(JSON.stringify(n))):(t.writeHead(400,{"Content-Type":"application/json"}),t.end("ERROR: Request body doesn't contain required fields"))}catch(e){console.log("ERROR: Error adding user")}}getUser(e,t,n){if(E(n)){const e=v.getUsers().filter((e=>e.id===n))[0];e?.id?(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(e))):(t.writeHead(404,{"Content-Type":"application/json"}),t.end("ERROR: User with this ID not found"))}else t.writeHead(400,{"Content-Type":"application/json"}),t.end("ERROR: UserId is invalid")}deleteUser(e,t,n){if(E(n)){const e=v.getUsers().filter((e=>e.id===n))[0];e?.id?(v.deleteUser(n),t.writeHead(204,{"Content-Type":"application/json"}),t.end("User has been deleted")):(t.writeHead(404,{"Content-Type":"application/json"}),t.end("ERROR: User with this ID not found"))}else t.writeHead(400,{"Content-Type":"application/json"}),t.end("ERROR: UserId is invalid")}async updateUser(e,t,n){try{if(E(n)){const s=await u(e);if(s.username&&s.age&&s.hobbies){const e=v.getUsers().filter((e=>e.id===n))[0];e?.id?(s.id=e?.id,v.updateUser(s),t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(s))):(t.writeHead(404,{"Content-Type":"application/json"}),t.end("ERROR: User with this ID not found"))}else t.writeHead(400,{"Content-Type":"application/json"}),t.end("ERROR: UserId is invalid")}}catch(e){console.log("ERROR: Error update user")}}notFound(e,t){t.writeHead(404,{"Content-Type":"application/json"}),t.end("ERROR: Request not recognized.")}},g={"/users":{GET:f.getUsers,POST:f.createUser},"/users/id":{GET:f.getUser,DELETE:f.deleteUser,PUT:f.updateUser},notFound:f.notFound};n(412);const v=new class{constructor(){this.users=[]}getUsers(){return this.users}setUsers(e){this.users=e}addUser(e){this.users.push(e)}deleteUser(e){const t=this.users.reduce(((t,n,s)=>n.id===e?s:t),0);this.users.splice(t,1)}updateUser(e){const t=this.users.reduce(((t,n,s)=>n.id===e.id?s:t),0);this.users.length>=t&&(this.users[t].username=e.username,this.users[t].age=e.age,this.users[t].hobbies=e.hobbies)}},h=(0,e.createServer)(((e,n)=>{try{const s=(0,t.parse)(e.url,!0).pathname,r=e.method?e.method.toUpperCase():"GET";if("/api/users"===s)"GET"!==r&&"POST"!==r||g["/users"][r](e,n);else if(s?.includes("/api/users/")){const t=s.split("/").slice(-1)[0];t?.length&&("GET"!==r&&"DELETE"!==r&&"PUT"!==r||g["/users/id"][r](e,n,t))}else console.log("not f"),g.notFound(e,n)}catch(e){console.error("SERVER ERROR:",e),n.writeHead(500,{"Content-Type":"text/plain"}),n.end("ERROR: Internal Server Error")}})),O=process.env.PORT||4e3;h.on("request",((e,t)=>{console.log(`${e.method} ${e.url}`)})),h.listen(O,(()=>console.log(`Server is running on port: ${O}`)))})()})();